import { buildConfig } from "payload/config";
import { webpackBundler } from "@payloadcms/bundler-webpack";
import { mongooseAdapter } from "@payloadcms/db-mongodb";
import { cloudStorage } from "@payloadcms/plugin-cloud-storage";
import { s3Adapter } from "@payloadcms/plugin-cloud-storage/s3";
import { slateEditor } from "@payloadcms/richtext-slate";

export default buildConfig({
  plugins: [
    cloudStorage({
      collections: {
        media: {
          prefix: "media",
          adapter: s3Adapter({
            bucket: process.env.S3_BUCKET,
            config: {
              region: process.env.S3_REGION,
              endpoint: process.env.S3_URL,
            },
          }),
        },
      },
    }),
  ],
  admin: {
    bundler: webpackBundler(),
    webpack: (config) => {
      config.resolve.fallback = {
        ...config.resolve.fallback,
        /**
         * In development mode, Webpack tries to compile the storage.ts
         * module for the client and resolve fs, which fails:
         * ```
         * ERROR in ./node_modules/@payloadcms/plugin-cloud-storage/dist/adapters/s3/handleUpload.js 43:27-40
         * Module not found: Error: Can't resolve 'fs'
         * ```
         */
        fs: false,
        util: false,
        os: false,
      };
      return config;
    },
  },
  editor: slateEditor({}),
  db: mongooseAdapter({
    url: process.env.MONGODB_URI,
  }),
});
